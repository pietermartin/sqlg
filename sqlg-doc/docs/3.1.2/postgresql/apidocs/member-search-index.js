memberSearchIndex = [{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addHashPartitionColumns()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addInEdgeDefinitions()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addOutEdgeDefinitions()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addPartitionSchemaAbstractLabelColumns()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addPartitionTables()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"addPropertyDefinitions()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"afterCreateTemporaryTableStatement()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"alterForeignKeyToDeferrable(String, String, String)","u":"alterForeignKeyToDeferrable(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"alterSequenceCacheSize(SqlgGraph, SchemaTable, String, int)","u":"alterSequenceCacheSize(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.lang.String,int)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"assertTableName(String)","u":"assertTableName(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"bulkAddEdges(SqlgGraph, SchemaTable, SchemaTable, String, Pair<String, String>, Collection<Pair<L, R>>, Map<String, PropertyDefinition>, Map<String, Object>)","u":"bulkAddEdges(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,org.umlg.sqlg.structure.SchemaTable,java.lang.String,org.apache.commons.lang3.tuple.Pair,java.util.Collection,java.util.Map,java.util.Map)"},{"p":"org.umlg.sqlg.plugin","c":"PostgresPlugin","l":"canWorkWith(DatabaseMetaData)","u":"canWorkWith(java.sql.DatabaseMetaData)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"checkConstraintName(SqlgGraph, String, String, String, String)","u":"checkConstraintName(org.umlg.sqlg.structure.SqlgGraph,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"clone()"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"clone()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"columnsToIgnore()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"constructCompleteCopyCommandSqlEdge(SqlgGraph, SqlgEdge, VertexLabel, VertexLabel, SqlgVertex, SqlgVertex, Map<String, Object>)","u":"constructCompleteCopyCommandSqlEdge(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SqlgEdge,org.umlg.sqlg.structure.topology.VertexLabel,org.umlg.sqlg.structure.topology.VertexLabel,org.umlg.sqlg.structure.SqlgVertex,org.umlg.sqlg.structure.SqlgVertex,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"constructCompleteCopyCommandSqlVertex(SqlgGraph, SqlgVertex, Map<String, Object>)","u":"constructCompleteCopyCommandSqlVertex(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SqlgVertex,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"constructCompleteCopyCommandSqlVertex(SqlgGraph, String, String, Set<String>)","u":"constructCompleteCopyCommandSqlVertex(org.umlg.sqlg.structure.SqlgGraph,java.lang.String,java.lang.String,java.util.Set)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"constructCompleteCopyCommandTemporarySqlVertex(SqlgGraph, SqlgVertex, Map<String, Object>)","u":"constructCompleteCopyCommandTemporarySqlVertex(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SqlgVertex,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"convertArray(PropertyType, Array)","u":"convertArray(org.umlg.sqlg.structure.PropertyType,java.sql.Array)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"createSchemaStatement(String)","u":"createSchemaStatement(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"currSequenceVal(SqlgGraph, SchemaTable, String)","u":"currSequenceVal(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"dialectName()"},{"p":"org.umlg.sqlg.gis","c":"Gis","l":"distanceBetween(GeographyPoint, GeographyPoint)","u":"distanceBetween(org.umlg.sqlg.gis.GeographyPoint,org.umlg.sqlg.gis.GeographyPoint)"},{"p":"org.umlg.sqlg.gis","c":"Gis","l":"distanceBetween(Point, Point)","u":"distanceBetween(net.postgis.jdbc.geometry.Point,net.postgis.jdbc.geometry.Point)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"drop(EdgeLabel, Collection<RecordId.ID>)","u":"drop(org.umlg.sqlg.structure.topology.EdgeLabel,java.util.Collection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"drop(SqlgGraph, String, String, LinkedList<SchemaTableTree>)","u":"drop(org.umlg.sqlg.structure.SqlgGraph,java.lang.String,java.lang.String,java.util.LinkedList)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"drop(VertexLabel, Collection<RecordId.ID>)","u":"drop(org.umlg.sqlg.structure.topology.VertexLabel,java.util.Collection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"dropWithForeignKey(boolean, EdgeLabel, VertexLabel, Collection<RecordId.ID>, boolean)","u":"dropWithForeignKey(boolean,org.umlg.sqlg.structure.topology.EdgeLabel,org.umlg.sqlg.structure.topology.VertexLabel,java.util.Collection,boolean)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"existIndexQuery(SchemaTable, String, String)","u":"existIndexQuery(org.umlg.sqlg.structure.SchemaTable,java.lang.String,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"extractIndices(Connection, String, String)","u":"extractIndices(java.sql.Connection,java.lang.String,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"flushEdgeCache(SqlgGraph, Map<MetaEdge, Pair<SortedSet<String>, Map<SqlgEdge, Triple<SqlgVertex, SqlgVertex, Map<String, Object>>>>>)","u":"flushEdgeCache(org.umlg.sqlg.structure.SqlgGraph,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"flushEdgePropertyCache(SqlgGraph, Map<SchemaTable, Pair<SortedSet<String>, Map<SqlgEdge, Map<String, Object>>>>)","u":"flushEdgePropertyCache(org.umlg.sqlg.structure.SqlgGraph,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"flushVertexCache(SqlgGraph, Map<SchemaTable, Pair<SortedSet<String>, Map<SqlgVertex, Map<String, Object>>>>)","u":"flushVertexCache(org.umlg.sqlg.structure.SqlgGraph,java.util.Map)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"flushVertexPropertyCache(SqlgGraph, Map<SchemaTable, Pair<SortedSet<String>, Map<SqlgVertex, Map<String, Object>>>>)","u":"flushVertexPropertyCache(org.umlg.sqlg.structure.SqlgGraph,java.util.Map)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint(Point)","u":"%3Cinit%3E(net.postgis.jdbc.geometry.Point)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPoint","l":"GeographyPoint(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPolygon","l":"GeographyPolygon()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.gis","c":"GeographyPolygon","l":"GeographyPolygon(LinearRing[])","u":"%3Cinit%3E(net.postgis.jdbc.geometry.LinearRing[])"},{"p":"org.umlg.sqlg.gis","c":"GeographyPolygon","l":"GeographyPolygon(Polygon)","u":"%3Cinit%3E(net.postgis.jdbc.geometry.Polygon)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPolygon","l":"GeographyPolygon(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.umlg.sqlg.gis","c":"GeographyPolygon","l":"GeographyPolygon(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getArrayContainsQueryText(String)","u":"getArrayContainsQueryText(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getArrayDriverType(PropertyType)","u":"getArrayDriverType(org.umlg.sqlg.structure.PropertyType)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getArrayOverlapsQueryText(String)","u":"getArrayOverlapsQueryText(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getAutoIncrement()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getAutoIncrementPrimaryKeyConstruct()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getBatchNull()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getBlocked(int, Connection)","u":"getBlocked(int,java.sql.Connection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getColumnEscapeKey()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getConnectionBackendPid(Connection)","u":"getConnectionBackendPid(java.sql.Connection)"},{"p":"org.umlg.sqlg.plugin","c":"PostgresPlugin","l":"getDriverFor(String)","u":"getDriverFor(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getForeignKeyTypeDefinition()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getFullTextQueryText(FullText, String)","u":"getFullTextQueryText(org.umlg.sqlg.predicate.FullText,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getGis(SqlgGraph)","u":"getGis(org.umlg.sqlg.structure.SqlgGraph)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getGisSchemas()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getInternalSchemas()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getMaximumColumnNameLength()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getMaximumIndexNameLength()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getMaximumSchemaNameLength()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getMaximumTableNameLength()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getPartitions(Connection)","u":"getPartitions(java.sql.Connection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getPrimaryKeyType()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getShardCount(SqlgGraph, AbstractLabel)","u":"getShardCount(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.topology.AbstractLabel)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"getSpacialRefTable()"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"getValue()"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"getValue()"},{"p":"org.umlg.sqlg.gis","c":"Gis","l":"GIS"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"grantReadOnlyUserPrivilegesToSqlgSchemas(SqlgGraph)","u":"grantReadOnlyUserPrivilegesToSqlgSchemas(org.umlg.sqlg.structure.SqlgGraph)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"handleOther(Map<String, Object>, String, Object, PropertyType)","u":"handleOther(java.util.Map,java.lang.String,java.lang.Object,org.umlg.sqlg.structure.PropertyType)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"hashCode()"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"hashCode()"},{"p":"org.umlg.sqlg.plugin","c":"PostgresPlugin","l":"instantiateDialect()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"isPostgresql()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"isSystemIndex(String)","u":"isSystemIndex(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"isTimestampz(String)","u":"isTimestampz(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"lock(SqlgGraph)","u":"lock(org.umlg.sqlg.structure.SqlgGraph)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"lockTable(SqlgGraph, SchemaTable, String)","u":"lockTable(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.lang.String)"},{"p":"org.umlg.sqlg.plugin","c":"PostgresPlugin","l":"manageJdbcUrl(String)","u":"manageJdbcUrl(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"needForeignKeyIndex()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"needsTimeZone()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"nextSequenceVal(SqlgGraph, SchemaTable, String)","u":"nextSequenceVal(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"notifyChange(SqlgGraph, LocalDateTime, JsonNode)","u":"notifyChange(org.umlg.sqlg.structure.SqlgGraph,java.time.LocalDateTime,com.fasterxml.jackson.databind.JsonNode)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"PGcidr()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"PGcidr(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"PGinet()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"PGinet(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"PostgresDialect()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.plugin","c":"PostgresPlugin","l":"PostgresPlugin()","u":"%3Cinit%3E()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"prepareDB(Connection)","u":"prepareDB(java.sql.Connection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"propertyTypeToJavaSqlType(PropertyType)","u":"propertyTypeToJavaSqlType(org.umlg.sqlg.structure.PropertyType)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"propertyTypeToSqlDefinition(PropertyType)","u":"propertyTypeToSqlDefinition(org.umlg.sqlg.structure.PropertyType)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"registerListener(SqlgGraph)","u":"registerListener(org.umlg.sqlg.structure.SqlgGraph)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"registerType(Connection)","u":"registerType(java.sql.Connection)"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"registerType(Connection)","u":"registerType(java.sql.Connection)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"registerTypes(SqlgGraph, int)","u":"registerTypes(org.umlg.sqlg.structure.SqlgGraph,int)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sequenceName(SqlgGraph, SchemaTable, String)","u":"sequenceName(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setArray(PreparedStatement, int, PropertyType, Object[])","u":"setArray(java.sql.PreparedStatement,int,org.umlg.sqlg.structure.PropertyType,java.lang.Object[])"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setGeographyPoint(PreparedStatement, int, Object)","u":"setGeographyPoint(java.sql.PreparedStatement,int,java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setJson(PreparedStatement, int, JsonNode)","u":"setJson(java.sql.PreparedStatement,int,com.fasterxml.jackson.databind.JsonNode)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setLineString(PreparedStatement, int, Object)","u":"setLineString(java.sql.PreparedStatement,int,java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setLquery(PreparedStatement, int, String)","u":"setLquery(java.sql.PreparedStatement,int,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setLqueryArray(PreparedStatement, int, Array)","u":"setLqueryArray(java.sql.PreparedStatement,int,java.sql.Array)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setLtree(PreparedStatement, int, String)","u":"setLtree(java.sql.PreparedStatement,int,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setLtreeArray(PreparedStatement, int, Array)","u":"setLtreeArray(java.sql.PreparedStatement,int,java.sql.Array)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setPoint(PreparedStatement, int, Object)","u":"setPoint(java.sql.PreparedStatement,int,java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"setPolygon(PreparedStatement, int, Object)","u":"setPolygon(java.sql.PreparedStatement,int,java.lang.Object)"},{"p":"org.umlg.sqlg.gis","c":"Gis","l":"setSqlgGraph(SqlgGraph)","u":"setSqlgGraph(org.umlg.sqlg.structure.SqlgGraph)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"setValue(String)","u":"setValue(java.lang.String)"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"setValue(String)","u":"setValue(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlArrayTypeNameToPropertyType(String, SqlgGraph, String, String, String, ListIterator<Triple<String, Integer, String>>)","u":"sqlArrayTypeNameToPropertyType(java.lang.String,org.umlg.sqlg.structure.SqlgGraph,java.lang.String,java.lang.String,java.lang.String,java.util.ListIterator)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlgAddIndexEdgeSequenceColumn()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlgCreateTopologyGraph()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlgTopologyCreationScripts()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlInParameterLimit()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlToGetAllForeignKeys()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlTruncate(SqlgGraph, SchemaTable)","u":"sqlTruncate(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"sqlTypeToPropertyType(SqlgGraph, String, String, String, int, String, ListIterator<Triple<String, Integer, String>>)","u":"sqlTypeToPropertyType(org.umlg.sqlg.structure.SqlgGraph,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.util.ListIterator)"},{"p":"org.umlg.sqlg.gis","c":"Gis","l":"SRID"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"streamSql(SqlgGraph, String)","u":"streamSql(org.umlg.sqlg.structure.SqlgGraph,java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsBatchMode()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsBulkWithinOut()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsClientInfo()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsDeferrableForeignKey()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsDistribution()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsILike()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsJsonArrayValues()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsJsonType()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsPartitioning()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsSharding()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsStreamingBatchMode()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsTruncateMultipleTablesTogether()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"supportsType(PropertyType)","u":"supportsType(org.umlg.sqlg.structure.PropertyType)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"temporaryTableCopyCommandSqlVertex(SqlgGraph, SchemaTable, Set<String>)","u":"temporaryTableCopyCommandSqlVertex(org.umlg.sqlg.structure.SqlgGraph,org.umlg.sqlg.structure.SchemaTable,java.util.Set)"},{"p":"org.umlg.sqlg.inet","c":"PGcidr","l":"toInetAddress()"},{"p":"org.umlg.sqlg.inet","c":"PGinet","l":"toInetAddress()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"unregisterListener()"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"validateColumnName(String)","u":"validateColumnName(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"validateProperty(Object, Object)","u":"validateProperty(java.lang.Object,java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"validateSchemaName(String)","u":"validateSchemaName(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"validateTableName(String)","u":"validateTableName(java.lang.String)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"valueToValuesString(PropertyType, Object)","u":"valueToValuesString(org.umlg.sqlg.structure.PropertyType,java.lang.Object)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"writeStreamingEdge(Writer, SqlgEdge, VertexLabel, VertexLabel, SqlgVertex, SqlgVertex, Map<String, Object>, EdgeLabel)","u":"writeStreamingEdge(java.io.Writer,org.umlg.sqlg.structure.SqlgEdge,org.umlg.sqlg.structure.topology.VertexLabel,org.umlg.sqlg.structure.topology.VertexLabel,org.umlg.sqlg.structure.SqlgVertex,org.umlg.sqlg.structure.SqlgVertex,java.util.Map,org.umlg.sqlg.structure.topology.EdgeLabel)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"writeStreamingVertex(Writer, Map<String, Object>, VertexLabel)","u":"writeStreamingVertex(java.io.Writer,java.util.Map,org.umlg.sqlg.structure.topology.VertexLabel)"},{"p":"org.umlg.sqlg.dialect.impl","c":"PostgresDialect","l":"writeTemporaryStreamingVertex(Writer, Map<String, Object>)","u":"writeTemporaryStreamingVertex(java.io.Writer,java.util.Map)"}];updateSearchResults();